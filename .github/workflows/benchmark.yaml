name: Benchmark

on:
  - push
  - pull_request

jobs:
  competing_benchmark:
    name: Compare benchmark with similar tools

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2.1.5
        timeout-minutes: 1
        continue-on-error: true
        if: matrix.os != 'macos-latest' # Cache causes errors on macOS
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-

      - name: Build pdu
        run: cargo build --release

      - name: Install dust
        run: cargo install du-dust --bin dust

      - name: Install dutree
        run: cargo install dutree --bin dutree

      - name: Modify $PATH
        run: |
          echo "$(pwd)/target/release" >> "$GITHUB_PATH"
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"

      - name: Inspect command locations
        run: |
          which pdu
          which dust
          which dutree
          which du

      - name: 'Benchmark: 1 measurement, 1 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '1'
          BENCHMARK_EXECUTION_COUNT: '1'
        run: |
          ./benchmark.sh pdu --total-width 150 /usr
          ./benchmark.sh dust -w 150 /usr
          ./benchmark.sh dutree /usr
          ./benchmark.sh du /usr

      - name: 'Benchmark: 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --total-width 150 /usr
          ./benchmark.sh dust -w 150 --apparent-size /usr
          ./benchmark.sh dutree /usr
          ./benchmark.sh du --apparent-size /usr

      - name: 'Benchmark: blksize, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --total-width 150 --quantity=blksize /usr
          ./benchmark.sh dust -w 150 /usr
          ./benchmark.sh dutree --usage /usr
          ./benchmark.sh du /usr

      - name: 'Benchmark: top-down, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --total-width 150 --top-down /usr
          ./benchmark.sh dust -w 150 --apparent-size --reverse /usr
          ./benchmark.sh dutree /usr

      - name: 'Benchmark: summary, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --total-width 150 --max-depth 1 /usr
          ./benchmark.sh dutree --summary /usr
          ./benchmark.sh du --apparent-size --total /usr
