name: Test

on:
  - push
  - pull_request

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        profile:
          - name: Debug
            flag: ''
          - name: Release
            flag: --release

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2.1.5
        timeout-minutes: 1
        continue-on-error: true
        if: matrix.os != 'macos-latest' # Cache causes errors on macOS
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: 'true'
          default: 'true'

      - name: Build
        run: cargo build --locked ${{ matrix.profile.flag }}

      - name: Test
        run: cargo test --no-fail-fast ${{ matrix.profile.flag }}

  clippy_check:
    name: Clippy

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        profile:
          - name: Debug
            flag: ''
          - name: Release
            flag: --release

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2.1.5
        timeout-minutes: 1
        continue-on-error: true
        if: matrix.os != 'macos-latest' # Cache causes errors on macOS
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-${{ runner.os }}-${{ matrix.profile.name }}-${{ hashFiles('rust-toolchain') }}-

      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          components: clippy
          override: 'true'
          default: 'true'

      - name: Use clippy to lint code
        uses: actions-rs/clippy-check@v1
        with:
          name: Clippy Report (${{ hashFiles('rust-toolchain') }}, ${{ matrix.os }})
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --all-targets ${{ matrix.profile.flag }} -- -D warnings

  fmt_check:
    name: Fmt

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          components: rustfmt
          override: 'true'
          default: 'true'

      - name: Check code formatting
        run: cargo fmt -- --check

  cargo_deny:
    name: Lint crate graph
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1.2.6

  competing_benchmark:
    name: Compare benchmark with similar tools

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2.1.5
        timeout-minutes: 1
        continue-on-error: true
        if: matrix.os != 'macos-latest' # Cache causes errors on macOS
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-

      - name: Build pdu
        run: cargo build --release

      - name: Install dust
        run: cargo install du-dust --bin dust

      - name: Install dutree
        run: cargo install dutree --bin dutree

      - name: Modify $PATH
        run: |
          echo "$(pwd)/target/release" >> "$GITHUB_PATH"
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
          which pdu
          which dust
          which dutree
          which du

      - name: 'Benchmark: 1 measurement, 1 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '1'
          BENCHMARK_EXECUTION_COUNT: '1'
        run: |
          ./benchmark.sh pdu /usr
          ./benchmark.sh dust /usr
          ./benchmark.sh dutree /usr
          ./benchmark.sh du /usr

      - name: 'Benchmark: 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu /usr
          ./benchmark.sh dust --apparent-size /usr
          ./benchmark.sh dutree /usr
          ./benchmark.sh du --apparent-size /usr

      - name: 'Benchmark: blksize, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --quantity=blksize /usr
          ./benchmark.sh dust /usr
          ./benchmark.sh dutree --usage /usr
          ./benchmark.sh du /usr

      - name: 'Benchmark: top-down, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --top-down /usr
          ./benchmark.sh dust --apparent-size --reverse /usr
          ./benchmark.sh dutree /usr

      - name: 'Benchmark: summary, 3 measurement, 5 execution'
        env:
          BENCHMARK_MEASUREMENT_COUNT: '3'
          BENCHMARK_EXECUTION_COUNT: '5'
        run: |
          ./benchmark.sh pdu --max-depth 1 /usr
          ./benchmark.sh dutree --summary /usr
          ./benchmark.sh du --apparent-size --total /usr
